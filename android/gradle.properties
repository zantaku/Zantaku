# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx512m -XX:MaxMetaspaceSize=256m
org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=1024m -XX:+UseG1GC -XX:+UseStringDeduplication

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true

# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

# Enable AAPT2 PNG crunching
android.enablePngCrunchInReleaseBuilds=true

# Enable resource shrinking in release builds
android.enableShrinkResourcesInReleaseBuilds=true

# Enable ProGuard in release builds
android.enableProguardInReleaseBuilds=true

# Disable R8 full mode to prevent breaking authentication functions
android.enableR8.fullMode=false

# Enable build cache
org.gradle.caching=true

# Enable parallel builds
org.gradle.parallel=true

# Enable configuration cache (disabled for React Native compatibility)
# org.gradle.configuration-cache=true

# Use this property to specify which architecture you want to build.
# You can also override it from the CLI using
# ./gradlew <task> -PreactNativeArchitectures=x86_64
reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64

# Use this property to enable support to the new architecture.
# This will allow you to use TurboModules and the Fabric render in
# your application. You should enable this flag either if you want
# to write custom TurboModules/Fabric components OR use libraries that
# are providing them.
newArchEnabled=false

# Use this property to enable or disable the Hermes JS engine.
# If set to false, you will be using JSC instead.
hermesEnabled=true

# Enable GIF support in React Native images (~200 B increase)
expo.gif.enabled=true
# Enable webp support in React Native images (~85 KB increase)
expo.webp.enabled=true
# Enable animated webp support (~3.4 MB increase)
# Disabled by default because iOS doesn't support animated webp
expo.webp.animated=false

# Enable network inspector
EX_DEV_CLIENT_NETWORK_INSPECTOR=true

# Use legacy packaging to compress native libraries in the resulting APK.
expo.useLegacyPackaging=false

expo.jsEngine=hermes

# Network and API optimization settings
# Enable network timeout optimization for API calls
android.enableNetworkOptimization=true

# HTTP connection pool optimization
android.enableHttpConnectionPool=true

# DNS resolution optimization
android.enableDnsOptimization=true

# Enable HTTP/2 support for better API performance
android.enableHttp2=true

# Connection timeout for API calls (in seconds)
android.apiConnectionTimeout=15

# Read timeout for API calls (in seconds)  
android.apiReadTimeout=30

# Maximum number of concurrent API connections
android.maxConcurrentConnections=10

# Enable request/response compression
android.enableHttpCompression=true

# Enable automatic retry for failed API calls
android.enableApiRetry=true

# Maximum retry attempts for API calls
android.maxApiRetryAttempts=3

# Base delay between retries (in milliseconds)
android.apiRetryBaseDelay=1000

# VLC Media Player optimization settings
# Enable hardware acceleration for video decoding
android.enableVlcHardwareAcceleration=true

# VLC network buffer size (in milliseconds)
android.vlcNetworkCaching=3000

# Enable VLC HTTP reconnect for streaming
android.vlcHttpReconnect=true

# VLC subtitle rendering optimization
android.vlcSubtitleEncoding=UTF-8